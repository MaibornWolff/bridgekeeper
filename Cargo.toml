[package]
name = "bridgekeeper"
version = "0.1.0"
authors = ["Sebastian Woehrl <sebastian.woehrl@maibornwolff.de>"]
edition = "2018"

[dependencies]
log = "0.4.17"
simple_logger = {version = "2.3.0", default-features = false }
kube = {version = "0.74.0", features = ["derive", "admission", "runtime"]}
k8s-openapi = { version = "0.15.0", default-features = false, features = ["v1_19"] }
schemars = "0.8.10"
serde = "1.0.144"
serde_derive = "1.0.144"
serde_json = "1.0.85"
serde_yaml = "0.9.13"
tokio = { version = "1.21.1", features = ["rt-multi-thread", "macros", "sync"]}
futures = "0.3.24"
rocket = {version = "0.5.0-rc.2", features = ["tls", "json"]}
rustls = "0.20.5"
pyo3 = "0.17.1"
pythonize = "0.17.0"
rcgen = "0.9.3"
base64 = "0.13.0"
argh = "0.1.8"
rust-embed = "6.4.1"
lazy_static = "1.4.0"
prometheus = {version = "0.13.2", features = ["process"]}
json-patch = "0.2.6"
exponential-backoff = "1.1.0"
reqwest = {version="0.11.11"}


[profile.release]
lto = true
opt-level = 'z'  # Optimize for size.
codegen-units = 1
# When a panic in a task occures we want the whole process to crash to trigger a kubernetes pod restart
panic = 'abort'
