[package]
name = "bridgekeeper"
version = "0.1.0"
authors = ["Sebastian Woehrl <sebastian.woehrl@maibornwolff.de>"]
edition = "2018"

[dependencies]
log = "0.4.17"
kube = {version = "0.79.0", features = ["derive", "admission", "runtime"]}
k8s-openapi = { version = "0.17.0", default-features = false, features = ["v1_22"] }
schemars = "0.8.11"
serde = "1.0.152"
serde_derive = "1.0.152"
serde_json = "1.0.93"
serde_yaml = "0.9.17"
tokio = { version = "1.25.0", features = ["rt-multi-thread", "macros", "sync"]}
futures = "0.3.26"
rocket = {version = "0.5.0-rc.2", features = ["tls", "json"]}
rustls = "0.20.8"
pyo3 = "0.18.1"
pythonize = "0.18.0"
rcgen = "0.10.0"
base64 = "0.21.0"
argh = "0.1.10"
rust-embed = "6.4.2"
lazy_static = "1.4.0"
prometheus = {version = "0.13.3", features = ["process"]}
json-patch = "0.3.0"
exponential-backoff = "1.2.0"
reqwest = {version="0.11.14"}
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.16", default-features = false, features = ["fmt", "json", "std", "registry"] } 


[profile.release]
lto = true
opt-level = 'z'  # Optimize for size.
codegen-units = 1
# When a panic in a task occures we want the whole process to crash to trigger a kubernetes pod restart
panic = 'abort'
