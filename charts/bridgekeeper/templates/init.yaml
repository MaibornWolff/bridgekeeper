{{- if .Values.bridgekeeper.runInit }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "bridgekeeper.serviceAccountName" . }}-init
  labels:
    {{- include "bridgekeeper.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    {{- include "bridgekeeper.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  name: bridgekeeper-init-role
rules:
# The init job needs to create/update the webhook configurations
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
# The init job needs to update namespaces with the ignore label
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    {{- include "bridgekeeper.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  name: bridgekeeper-init-role
  namespace: "{{ .Release.Namespace }}"
rules:
# The init job creates a secret with the TLS certificate, the main program needs to read it
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    {{- include "bridgekeeper.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  name: bridgekeeper-init-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bridgekeeper-init-role
subjects:
- kind: ServiceAccount
  name: {{ include "bridgekeeper.serviceAccountName" . }}-init
  namespace: "{{ .Release.Namespace }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    {{- include "bridgekeeper.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  name: bridgekeeper-init-rolebinding
  namespace: "{{ .Release.Namespace }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: bridgekeeper-init-role
subjects:
- kind: ServiceAccount
  name: {{ include "bridgekeeper.serviceAccountName" . }}-init
  namespace: "{{ .Release.Namespace }}"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "bridgekeeper-init"
  labels:
    {{- include "bridgekeeper.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: "bridgekeeper-init"
      labels:
        {{- include "bridgekeeper.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bridgekeeper.serviceAccountName" . }}-init
      automountServiceAccountToken: true
      containers:
      - name: bridgekeeper-init
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - bridgekeeper
        args:
          - init
          {{- range .Values.bridgekeeper.ignoreNamespaces }}
          - "--ignore-namespace"
          - {{ . | quote }}
          {{- end }}
          {{- if .Values.bridgekeeper.strictAdmission }}
          - "--strict-admission"
          {{- end }}
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
{{- end }}
